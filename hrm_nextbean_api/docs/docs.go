// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/account": {
            "post": {
                "description": "account creation information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "create new account",
                "parameters": [
                    {
                        "description": "account creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AccountCreationInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful create",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "create failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "Log in using account with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authen"
                ],
                "summary": "login by account",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "login failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AccountCreationInfo": {
            "type": "object",
            "required": [
                "email",
                "password",
                "role",
                "user-name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "role": {
                    "type": "string"
                },
                "user-name": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 5
                }
            }
        },
        "model.LoginForm": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "utils.error_response": {
            "type": "object",
            "properties": {
                "log": {
                    "type": "string"
                },
                "message": {},
                "status-code": {
                    "type": "integer"
                }
            }
        },
        "utils.success_response": {
            "type": "object",
            "properties": {
                "data": {},
                "filter": {},
                "message": {
                    "type": "string"
                },
                "paging": {},
                "status": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Intern Resource management system",
	Description:      "A web application to manage interns at the Nextbean Center, designed to oversee their daily tasks and schedules while working at the office. The app aims to streamline the management of internship programs, enabling efficient tracking of intern activities, assignments, and attendance for a well-organized and productive internship experience.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
