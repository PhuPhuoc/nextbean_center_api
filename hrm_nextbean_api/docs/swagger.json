{
    "swagger": "2.0",
    "info": {
        "description": "A web application to manage interns at the Nextbean Center, designed to oversee their daily tasks and schedules while working at the office. The app aims to streamline the management of internship programs, enabling efficient tracking of intern activities, assignments, and attendance for a well-organized and productive internship experience.",
        "title": "Intern Resource Management System",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/accounts": {
            "get": {
                "description": "Get a list of accounts with filtering, sorting, and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Get accounts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page",
                        "name": "psize",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by account ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by role ~ ex: admin-pm | admin-manager-pm",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creation date from (YYYY-MM-DD) ~ ex:2024-05-29",
                        "name": "created-at-from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by creation date to (YYYY-MM-DD)",
                        "name": "created-at-to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by field (created_at or name), prefix with - for descending order ~ Ex: user_name desc",
                        "name": "order-by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.success_response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Account"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            },
            "post": {
                "description": "account creation information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "create new account",
                "parameters": [
                    {
                        "description": "account creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AccountCreationInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful create",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "create failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/accounts/{account-id}": {
            "put": {
                "description": "update account's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "update account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "account update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateAccountInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful update",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "update failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete account information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "delete an account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful delete",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "delete failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/ojt": {
            "put": {
                "description": "update ojt's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OJT"
                ],
                "summary": "update ojt",
                "parameters": [
                    {
                        "description": "OJT update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateOJTInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful update",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "update failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            },
            "post": {
                "description": "ojt creation information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OJT"
                ],
                "summary": "create new ojt (on the job training)",
                "parameters": [
                    {
                        "description": "ojt creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.OJTCreationInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful create",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "create failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/ojt/get": {
            "post": {
                "description": "Get a list of ojt with filtering, sorting, and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OJT"
                ],
                "summary": "Get OJT",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page",
                        "name": "psize",
                        "in": "query"
                    },
                    {
                        "description": "ojt'filter option",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/model.FilterOJT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.success_response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.OJT"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/ojt/{id}": {
            "delete": {
                "description": "delete ojt information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OJT"
                ],
                "summary": "delete an ojt",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OJT ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful delete",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "delete failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/project": {
            "put": {
                "description": "project update information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update project",
                "parameters": [
                    {
                        "description": "project update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateProjectInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful create",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "create failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            },
            "post": {
                "description": "project creation information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "create new project",
                "parameters": [
                    {
                        "description": "project creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProjectCreationInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful create",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "create failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/project/get": {
            "post": {
                "description": "Get a list of projects with filtering, sorting, and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get projects",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page",
                        "name": "psize",
                        "in": "query"
                    },
                    {
                        "description": "project'filter option",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/model.ProjectFilter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.success_response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Project"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/project/get-mem-not-in/{project-id}": {
            "get": {
                "description": "Get a list of Memer not in Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get Memer not in project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "enter project-id",
                        "name": "project-id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.success_response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.PM"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/project/get-mem/{project-id}": {
            "get": {
                "description": "Get a list of Member in Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get Member in Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "enter project-id",
                        "name": "project-id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.success_response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Member"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/project/get-pm-not-in/{project-id}": {
            "get": {
                "description": "Get a list of PM not in Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get PM not in project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "enter project-id",
                        "name": "project-id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.success_response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.PM"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/project/get-pm/{project-id}": {
            "get": {
                "description": "Get a list of PM in Project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get PM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "enter project-id",
                        "name": "project-id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.success_response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.PM"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/project/manager": {
            "post": {
                "description": "Add manager to project information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "map project-manager",
                "parameters": [
                    {
                        "description": "Required: Fill in the id of the project manager into this array",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MapProPM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful mapping",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "mapping failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/project/member": {
            "post": {
                "description": "Add member to project information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "map project-member",
                "parameters": [
                    {
                        "description": "Add project-id and member-id to this json",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MapProMem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful mapping",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "mapping failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/project/remove-member": {
            "put": {
                "description": "remove member to project information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "remove map project-member",
                "parameters": [
                    {
                        "description": "add project-id and member-id to this json",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MapProMem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful mapping",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "mapping failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/technical": {
            "post": {
                "description": "technical creation information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Technical"
                ],
                "summary": "create new Technical",
                "parameters": [
                    {
                        "description": "technical creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TechnicalCreationInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful create",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "create failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/api/v1/technical/get": {
            "post": {
                "description": "Get a list of Technical with filtering, sorting, and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Technical"
                ],
                "summary": "Get Technical",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page",
                        "name": "psize",
                        "in": "query"
                    },
                    {
                        "description": "ojt'filter option",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/model.FilterTechnical"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.success_response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Technical"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/interns": {
            "get": {
                "description": "Get a list of interns with filtering, sorting, and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interns"
                ],
                "summary": "Get interns",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page",
                        "name": "psize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account-id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Student Code",
                        "name": "student-code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "OJT Semester",
                        "name": "ojt-semester",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Gender",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Phone Number",
                        "name": "phone-number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date of Birth From",
                        "name": "dob-from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date of Birth To",
                        "name": "dob-to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by field (created_at or name), prefix with - for descending order ~ Ex: user_name desc",
                        "name": "order-by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.success_response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Intern"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            },
            "post": {
                "description": "intern creation information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interns"
                ],
                "summary": "create new intern-account",
                "parameters": [
                    {
                        "description": "Required: user-name, email, password, student-code",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InternCreation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful create",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "create failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/interns/{intern-id}": {
            "get": {
                "description": "Get details of intern (base infomation, skills, projects)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interns"
                ],
                "summary": "Get intern'details by account-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "enter intern-id",
                        "name": "intern-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.success_response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.InternDetailInfo"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            },
            "put": {
                "description": "update intern's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interns"
                ],
                "summary": "update intern",
                "parameters": [
                    {
                        "type": "string",
                        "description": "intern ID",
                        "name": "intern-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "intern update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.InternUpdateInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful update",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "update failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/interns/{intern-id}/skill": {
            "post": {
                "description": "Add intern skills information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interns"
                ],
                "summary": "map intern-skill",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Intern ID",
                        "name": "intern-id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Required: Fill in the id (number) of the skills into this array",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MapInternSkill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful mapping",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "mapping failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Log in using account with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "login by account",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "schema": {
                            "$ref": "#/definitions/utils.success_response"
                        }
                    },
                    "400": {
                        "description": "login failure",
                        "schema": {
                            "$ref": "#/definitions/utils.error_response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Account": {
            "type": "object",
            "properties": {
                "created-at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user-name": {
                    "type": "string"
                }
            }
        },
        "model.AccountCreationInfo": {
            "type": "object",
            "required": [
                "email",
                "password",
                "role",
                "user-name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "role": {
                    "type": "string"
                },
                "user-name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 4
                }
            }
        },
        "model.DetailProject": {
            "type": "object",
            "properties": {
                "join-at": {
                    "type": "string"
                },
                "leave-at": {
                    "type": "string"
                },
                "project-name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.DetailSkill": {
            "type": "object",
            "properties": {
                "skill-level": {
                    "type": "string"
                },
                "technical-skill": {
                    "type": "string"
                }
            }
        },
        "model.FilterOJT": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "order-by": {
                    "type": "string"
                },
                "semester": {
                    "type": "string"
                },
                "university": {
                    "type": "string"
                }
            }
        },
        "model.FilterTechnical": {
            "type": "object",
            "properties": {
                "Technical-skill": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "order-by": {
                    "type": "string"
                }
            }
        },
        "model.Intern": {
            "type": "object",
            "properties": {
                "account-id": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "date-of-birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "intern-id": {
                    "type": "string"
                },
                "ojt-semester": {
                    "type": "string"
                },
                "phone-number": {
                    "type": "string"
                },
                "student-code": {
                    "type": "string"
                },
                "user-name": {
                    "type": "string"
                }
            }
        },
        "model.InternCreation": {
            "type": "object",
            "required": [
                "email",
                "password",
                "student-code",
                "user-name"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "date-of-birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "ojt-id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone-number": {
                    "type": "string"
                },
                "student-code": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 4
                },
                "user-name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 4
                }
            }
        },
        "model.InternDetailInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "date-of-birth": {
                    "type": "string"
                },
                "detail-project": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DetailProject"
                    }
                },
                "detail-skill": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DetailSkill"
                    }
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ojt-semester": {
                    "type": "string"
                },
                "phone-number": {
                    "type": "string"
                },
                "student-code": {
                    "type": "string"
                },
                "user-name": {
                    "type": "string"
                }
            }
        },
        "model.InternUpdateInfo": {
            "type": "object",
            "required": [
                "email",
                "student-code",
                "user-name"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "date-of-birth": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "ojt-id": {
                    "type": "integer"
                },
                "phone-number": {
                    "type": "string"
                },
                "student-code": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 4
                },
                "user-name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 4
                }
            }
        },
        "model.LoginForm": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.MapInternSkill": {
            "type": "object",
            "required": [
                "skill-level",
                "skills"
            ],
            "properties": {
                "skill-level": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "skills": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "model.MapProMem": {
            "type": "object",
            "required": [
                "mem-id",
                "project-id"
            ],
            "properties": {
                "mem-id": {
                    "type": "string"
                },
                "project-id": {
                    "type": "string"
                }
            }
        },
        "model.MapProPM": {
            "type": "object",
            "required": [
                "list-manager-id",
                "project-id"
            ],
            "properties": {
                "list-manager-id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "project-id": {
                    "type": "string"
                }
            }
        },
        "model.Member": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "student-code": {
                    "type": "string"
                },
                "technical_skills": {
                    "type": "string"
                },
                "user-name": {
                    "type": "string"
                }
            }
        },
        "model.OJT": {
            "type": "object",
            "properties": {
                "end-at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "semester": {
                    "type": "string"
                },
                "start-at": {
                    "type": "string"
                },
                "university": {
                    "type": "string"
                }
            }
        },
        "model.OJTCreationInfo": {
            "type": "object",
            "required": [
                "end-at",
                "semester",
                "start-at",
                "university"
            ],
            "properties": {
                "end-at": {
                    "type": "string"
                },
                "semester": {
                    "type": "string"
                },
                "start-at": {
                    "type": "string"
                },
                "university": {
                    "type": "string"
                }
            }
        },
        "model.PM": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user-name": {
                    "type": "string"
                }
            }
        },
        "model.Project": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start-date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.ProjectCreationInfo": {
            "type": "object",
            "required": [
                "description",
                "duration",
                "name",
                "start-at"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start-at": {
                    "type": "string"
                }
            }
        },
        "model.ProjectFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "order-by": {
                    "type": "string"
                },
                "start-date-from": {
                    "type": "string"
                },
                "start-date-to": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.Technical": {
            "type": "object",
            "properties": {
                "Technical-skill": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "model.TechnicalCreationInfo": {
            "type": "object",
            "required": [
                "technical-skill"
            ],
            "properties": {
                "technical-skill": {
                    "type": "string"
                }
            }
        },
        "model.UpdateAccountInfo": {
            "type": "object",
            "required": [
                "email",
                "role",
                "user-name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user-name": {
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 4
                }
            }
        },
        "model.UpdateOJTInfo": {
            "type": "object",
            "required": [
                "end-at",
                "id",
                "semester",
                "start-at",
                "university"
            ],
            "properties": {
                "end-at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "semester": {
                    "type": "string"
                },
                "start-at": {
                    "type": "string"
                },
                "university": {
                    "type": "string"
                }
            }
        },
        "model.UpdateProjectInfo": {
            "type": "object",
            "required": [
                "description",
                "duration",
                "id",
                "name",
                "start-at",
                "status"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "start-at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "utils.error_response": {
            "type": "object",
            "properties": {
                "log": {
                    "type": "string"
                },
                "message": {},
                "status-code": {
                    "type": "integer"
                }
            }
        },
        "utils.success_response": {
            "type": "object",
            "properties": {
                "data": {},
                "filter": {},
                "message": {
                    "type": "string"
                },
                "paging": {},
                "status": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}