definitions:
  model.Account:
    properties:
      created-at:
        type: string
      email:
        type: string
      id:
        type: string
      role:
        type: string
      user-name:
        type: string
    type: object
  model.AccountCreationInfo:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      role:
        type: string
      user-name:
        maxLength: 20
        minLength: 4
        type: string
    required:
    - email
    - password
    - role
    - user-name
    type: object
  model.LoginForm:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.UpdateAccountInfo:
    properties:
      email:
        type: string
      id:
        type: string
      role:
        type: string
      user-name:
        maxLength: 20
        minLength: 4
        type: string
    required:
    - email
    - id
    - role
    - user-name
    type: object
  utils.error_response:
    properties:
      log:
        type: string
      message: {}
      status-code:
        type: integer
    type: object
  utils.success_response:
    properties:
      data: {}
      filter: {}
      message:
        type: string
      orderby:
        type: string
      paging: {}
      status:
        type: integer
    type: object
info:
  contact: {}
  description: A web application to manage interns at the Nextbean Center, designed
    to oversee their daily tasks and schedules while working at the office. The app
    aims to streamline the management of internship programs, enabling efficient tracking
    of intern activities, assignments, and attendance for a well-organized and productive
    internship experience.
  title: Intern Resource management system
  version: "1.0"
paths:
  /api/v1/account:
    get:
      consumes:
      - application/json
      description: Get a list of accounts with filtering, sorting, and pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of records per page
        in: query
        name: psize
        type: integer
      - description: Filter by account ID
        in: query
        name: id
        type: integer
      - description: Filter by username
        in: query
        name: username
        type: string
      - description: Filter by email
        in: query
        name: email
        type: string
      - description: Filter by role
        in: query
        name: role
        type: string
      - description: Filter by creation date from (YYYY-MM-DD)
        in: query
        name: created-at-from
        type: string
      - description: Filter by creation date to (YYYY-MM-DD)
        in: query
        name: created-at-to
        type: string
      - description: Order by field (created_at or name), prefix with - for descending
          order
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.success_response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Account'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.error_response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: Get accounts
      tags:
      - Account
    post:
      consumes:
      - application/json
      description: account creation information
      parameters:
      - description: account creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.AccountCreationInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Successful create
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: create failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: create new account
      tags:
      - Account
    put:
      consumes:
      - application/json
      description: update account's information
      parameters:
      - description: account creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateAccountInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Successful update
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: update failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: update account
      tags:
      - Account
  /api/v1/account/{id}:
    delete:
      consumes:
      - application/json
      description: delete account information
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful delete
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: delete failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: delete an account
      tags:
      - Account
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Log in using account with email and password
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginForm'
      produces:
      - application/json
      responses:
        "200":
          description: Successful login
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: login failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: login by account
      tags:
      - Authentication
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
