definitions:
  model.Account:
    properties:
      created-at:
        type: string
      email:
        type: string
      id:
        type: string
      role:
        type: string
      user-name:
        type: string
    type: object
  model.AccountCreationInfo:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      role:
        type: string
      user-name:
        maxLength: 20
        minLength: 4
        type: string
    required:
    - email
    - password
    - role
    - user-name
    type: object
  model.AccountFilter:
    properties:
      created-at-from:
        type: string
      created-at-to:
        type: string
      email:
        type: string
      id:
        type: string
      order-by:
        type: string
      role:
        type: string
      user-name:
        type: string
    type: object
  model.DetailProject:
    properties:
      join-at:
        type: string
      leave-at:
        type: string
      project-name:
        type: string
      status:
        type: string
    type: object
  model.DetailSkill:
    properties:
      skill-level:
        type: string
      technical-skill:
        type: string
    type: object
  model.FilterOJT:
    properties:
      id:
        type: integer
      order-by:
        type: string
      semester:
        type: string
      university:
        type: string
    type: object
  model.FilterTechnical:
    properties:
      Technical-skill:
        type: string
      id:
        type: integer
      order-by:
        type: string
    type: object
  model.Intern:
    properties:
      account-id:
        type: string
      address:
        type: string
      avatar:
        type: string
      date-of-birth:
        type: string
      email:
        type: string
      gender:
        type: string
      ojt-semester:
        type: string
      phone-number:
        type: string
      student-code:
        type: string
      user-name:
        type: string
    type: object
  model.InternCreation:
    properties:
      address:
        type: string
      avatar:
        type: string
      date-of-birth:
        type: string
      email:
        type: string
      gender:
        type: string
      ojt-id:
        type: integer
      password:
        minLength: 6
        type: string
      phone-number:
        type: string
      student-code:
        maxLength: 10
        minLength: 4
        type: string
      user-name:
        maxLength: 20
        minLength: 4
        type: string
    required:
    - email
    - password
    - student-code
    - user-name
    type: object
  model.InternDetailInfo:
    properties:
      address:
        type: string
      avatar:
        type: string
      date-of-birth:
        type: string
      detail-project:
        items:
          $ref: '#/definitions/model.DetailProject'
        type: array
      detail-skill:
        items:
          $ref: '#/definitions/model.DetailSkill'
        type: array
      email:
        type: string
      gender:
        type: string
      ojt-semester:
        type: string
      phone-number:
        type: string
      student-code:
        type: string
      user-name:
        type: string
    type: object
  model.InternFilter:
    properties:
      account-id:
        type: string
      address:
        type: string
      dob-from:
        type: string
      dob-to:
        type: string
      email:
        type: string
      gender:
        type: string
      ojt-semester:
        type: string
      order-by:
        type: string
      phone-number:
        type: string
      student-code:
        type: string
      user-name:
        type: string
    type: object
  model.InternUpdateInfo:
    properties:
      account-id:
        type: string
      address:
        type: string
      avatar:
        type: string
      date-of-birth:
        type: string
      email:
        type: string
      gender:
        type: string
      ojt-id:
        type: integer
      phone-number:
        type: string
      student-code:
        maxLength: 10
        minLength: 4
        type: string
      user-name:
        maxLength: 20
        minLength: 4
        type: string
    required:
    - account-id
    - email
    - student-code
    - user-name
    type: object
  model.LoginForm:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  model.MapInternSkill:
    properties:
      skill-level:
        items:
          type: string
        type: array
      skills:
        items:
          type: integer
        type: array
      student-code:
        type: string
    required:
    - skill-level
    - skills
    - student-code
    type: object
  model.OJT:
    properties:
      end-at:
        type: string
      id:
        type: integer
      semester:
        type: string
      start-at:
        type: string
      university:
        type: string
    type: object
  model.OJTCreationInfo:
    properties:
      end-at:
        type: string
      semester:
        type: string
      start-at:
        type: string
      university:
        type: string
    required:
    - end-at
    - semester
    - start-at
    - university
    type: object
  model.ProjectCreationInfo:
    properties:
      description:
        type: string
      duration:
        type: string
      name:
        type: string
      start-at:
        type: string
    required:
    - description
    - duration
    - name
    - start-at
    type: object
  model.Technical:
    properties:
      Technical-skill:
        type: string
      id:
        type: integer
    type: object
  model.TechnicalCreationInfo:
    properties:
      technical-skill:
        type: string
    required:
    - technical-skill
    type: object
  model.UpdateAccountInfo:
    properties:
      email:
        type: string
      id:
        type: string
      role:
        type: string
      user-name:
        maxLength: 20
        minLength: 4
        type: string
    required:
    - email
    - id
    - role
    - user-name
    type: object
  model.UpdateOJTInfo:
    properties:
      end-at:
        type: string
      id:
        type: integer
      semester:
        type: string
      start-at:
        type: string
      university:
        type: string
    required:
    - end-at
    - id
    - semester
    - start-at
    - university
    type: object
  utils.error_response:
    properties:
      log:
        type: string
      message: {}
      status-code:
        type: integer
    type: object
  utils.success_response:
    properties:
      data: {}
      filter: {}
      message:
        type: string
      paging: {}
      status:
        type: integer
    type: object
info:
  contact: {}
  description: A web application to manage interns at the Nextbean Center, designed
    to oversee their daily tasks and schedules while working at the office. The app
    aims to streamline the management of internship programs, enabling efficient tracking
    of intern activities, assignments, and attendance for a well-organized and productive
    internship experience.
  title: Intern Resource management system
  version: "1.0"
paths:
  /api/v1/account:
    post:
      consumes:
      - application/json
      description: account creation information
      parameters:
      - description: account creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.AccountCreationInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Successful create
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: create failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: create new account
      tags:
      - Account
    put:
      consumes:
      - application/json
      description: update account's information
      parameters:
      - description: account update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateAccountInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Successful update
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: update failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: update account
      tags:
      - Account
  /api/v1/account/{id}:
    delete:
      consumes:
      - application/json
      description: delete account information
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful delete
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: delete failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: delete an account
      tags:
      - Account
  /api/v1/account/get:
    post:
      consumes:
      - application/json
      description: Get a list of accounts with filtering, sorting, and pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of records per page
        in: query
        name: psize
        type: integer
      - description: account'filter option
        in: body
        name: request
        schema:
          $ref: '#/definitions/model.AccountFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.success_response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Account'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.error_response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: Get accounts
      tags:
      - Account
  /api/v1/intern:
    post:
      consumes:
      - application/json
      description: intern creation information
      parameters:
      - description: 'Required: user-name, email, password, student-code'
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.InternCreation'
      produces:
      - application/json
      responses:
        "200":
          description: Successful create
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: create failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: create new intern-account
      tags:
      - Intern
    put:
      consumes:
      - application/json
      description: update intern's information
      parameters:
      - description: account creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.InternUpdateInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Successful update
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: update failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: update intern
      tags:
      - Intern
  /api/v1/intern/{account-id}:
    get:
      consumes:
      - application/json
      description: Get details of intern (base infomation, skills, projects)
      parameters:
      - description: enter account-id
        in: path
        name: account-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.success_response'
            - properties:
                data:
                  $ref: '#/definitions/model.InternDetailInfo'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.error_response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: Get intern'details by account-id
      tags:
      - Intern
  /api/v1/intern/get:
    post:
      consumes:
      - application/json
      description: Get a list of interns with filtering, sorting, and pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of records per page
        in: query
        name: psize
        type: integer
      - description: intern'filter option
        in: body
        name: request
        schema:
          $ref: '#/definitions/model.InternFilter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.success_response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Intern'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.error_response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: Get interns
      tags:
      - Intern
  /api/v1/intern/skill:
    post:
      consumes:
      - application/json
      description: Add intern skills information
      parameters:
      - description: 'Required: Fill in the id (number) of the skills into this array'
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.MapInternSkill'
      produces:
      - application/json
      responses:
        "200":
          description: Successful mapping
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: mapping failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: map intern-intern
      tags:
      - Intern
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Log in using account with email and password
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginForm'
      produces:
      - application/json
      responses:
        "200":
          description: Successful login
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: login failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: login by account
      tags:
      - Authentication
  /api/v1/ojt:
    post:
      consumes:
      - application/json
      description: ojt creation information
      parameters:
      - description: ojt creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.OJTCreationInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Successful create
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: create failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: create new ojt (on the job training)
      tags:
      - OJT
    put:
      consumes:
      - application/json
      description: update ojt's information
      parameters:
      - description: OJT update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateOJTInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Successful update
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: update failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: update ojt
      tags:
      - OJT
  /api/v1/ojt/{id}:
    delete:
      consumes:
      - application/json
      description: delete ojt information
      parameters:
      - description: OJT ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful delete
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: delete failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: delete an ojt
      tags:
      - OJT
  /api/v1/ojt/get:
    post:
      consumes:
      - application/json
      description: Get a list of ojt with filtering, sorting, and pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of records per page
        in: query
        name: psize
        type: integer
      - description: ojt'filter option
        in: body
        name: request
        schema:
          $ref: '#/definitions/model.FilterOJT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.success_response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.OJT'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.error_response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: Get OJT
      tags:
      - OJT
  /api/v1/project:
    post:
      consumes:
      - application/json
      description: project creation information
      parameters:
      - description: project creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.ProjectCreationInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Successful create
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: create failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: create new project
      tags:
      - Project
  /api/v1/technical:
    post:
      consumes:
      - application/json
      description: technical creation information
      parameters:
      - description: technical creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.TechnicalCreationInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Successful create
          schema:
            $ref: '#/definitions/utils.success_response'
        "400":
          description: create failure
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: create new Technical
      tags:
      - Technical
  /api/v1/technical/get:
    post:
      consumes:
      - application/json
      description: Get a list of Technical with filtering, sorting, and pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of records per page
        in: query
        name: psize
        type: integer
      - description: ojt'filter option
        in: body
        name: request
        schema:
          $ref: '#/definitions/model.FilterTechnical'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.success_response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Technical'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.error_response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.error_response'
      summary: Get Technical
      tags:
      - Technical
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
